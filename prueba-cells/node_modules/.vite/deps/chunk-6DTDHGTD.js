import {
  backStep,
  getCurrentRoute,
  getInterceptorContext,
  navigate,
  publish,
  publishOn,
  resetInterceptorContext,
  setInterceptorContext,
  subscribe,
  unsubscribe,
  updateInterceptorContext,
  updateSubroute
} from "./chunk-F7YLLEUV.js";

// node_modules/@open-cells/core-plugin/src/CorePlugin.js
var services = {};
services["subscribe"] = function(channelName, callback) {
  subscribe(channelName, this, callback);
};
services["unsubscribe"] = function(channels) {
  unsubscribe(channels, this);
};
services["publish"] = function(channelName, value, options = {}) {
  publish(channelName, value, options);
};
services["publishOn"] = function(channelName, htmlElement, eventName) {
  publishOn(channelName, htmlElement, eventName);
};
services["navigate"] = function(page, params) {
  navigate(page, params);
};
services["updateInterceptorContext"] = function(ctx) {
  updateInterceptorContext(ctx);
};
services["resetInterceptorContext"] = function() {
  resetInterceptorContext();
};
services["getInterceptorContext"] = function() {
  return getInterceptorContext();
};
services["setInterceptorContext"] = function(ctx) {
  setInterceptorContext(ctx);
};
services["getCurrentRoute"] = function() {
  getCurrentRoute();
};
services["updateSubroute"] = function(subroute) {
  updateSubroute(subroute);
};
services["backStep"] = function() {
  backStep();
};
function _plugCellsCore(element, bindToElement = true) {
  Object.entries(services).forEach(function([key, fn]) {
    element[key] = bindToElement ? fn.bind(element) : fn;
  });
}
function plugCellsCore(element) {
  _plugCellsCore(element, false);
  return element;
}

export {
  plugCellsCore
};
//# sourceMappingURL=chunk-6DTDHGTD.js.map
